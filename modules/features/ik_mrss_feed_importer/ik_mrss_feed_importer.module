<?php
/**
 * @file
 * Code for the MRSS Feed Importer feature.
 */

include_once 'ik_mrss_feed_importer.features.inc';

/**
 * Hook_form_alter()
 * Change the labels on select layout radio buttons.
 */
/*function ik_mrss_feed_importer_form_media_rss_slide_import_node_form_alter(&$form, &$form_state, $form_id) {
  $path = drupal_get_path('module', 'ik_slides');
  $form["field_layout"]["und"]["#options"] = array(
    'layout_1' => theme('image', array('path' => $path . '/layout-images/layout_1.png', 'alt' => t('Text to the left'), 'title' => t('Text to the left'))),
    'layout_2' => theme('image', array('path' => $path . '/layout-images/layout_2.png', 'alt' => t('Text in top'), 'title' => t('Text in top'))),
    'layout_3' => theme('image', array('path' => $path . '/layout-images/layout_3.png', 'alt' => t('Text in bottom'), 'title' => t('Text in bottom'))),
    'layout_4' => theme('image', array('path' => $path . '/layout-images/layout_4.png', 'alt' => t('Text to the right'), 'title' => t('Text to the right'))),
    //'layout_8' => theme('image', array('path' => $path . '/layout-images/layout_8.png', 'alt' => t('Text to the right with small image'), 'title' => t('Text to the right with small image'))),
    'layout_5' => theme('image', array('path' => $path . '/layout-images/layout_5.png', 'alt' => t('Image only'), 'title' => t('Image only'))),
    'layout_6' => theme('image', array('path' => $path . '/layout-images/layout_6.png', 'alt' => t('Text only'), 'title' => t('Text only'))),
    'layout_7' => theme('image', array('path' => $path . '/layout-images/layout_7.png', 'alt' => t('Feed import (text)'), 'title' => t('Feed import (text)')))
  );
}*/

/**
 * Defines a new feeds parser to Yahoo Search Media RSS feeds. You can read
 * about the format at http://en.wikipedia.org/wiki/Media_RSS.
 *
 * @return array $info
 */
function ik_mrss_feed_importer_feeds_plugins() {
  return array(
    'MediaRSS' => array(
      'name' => "Media RSS",
      'description' => t('Parse Yahoo Media RSS feed'),
      'handler' => array(
        'parent' => 'FeedsParser',
        'class' => 'MediaRSSParser',
        'file' => 'mrss.class.inc',
        'path' => drupal_get_path('module', 'ik_mrss_feed_importer' ) . '/includes',
      ),
    ),
    'SlideProcessor' => array(
      'name' => 'Slide parser',
      'description' => 'Process slide and add preview',
      'help' => 'Normal node process which builds screenshots',
      'handler' => array(
        'parent' => 'FeedsProcessor',
        'class' => 'SlideProcessor',
        'file' => 'SlideProcessor.class.inc',
        'path' => drupal_get_path('module', 'ik_mrss_feed_importer' ) . '/includes',
      ),
    ),
  );
}

/**
 * Make sure that the feed parser cache is cleared on module activation.
 */
function ik_mrss_feed_importer_enable() {
  cache_clear_all('plugins:feeds:plugins', 'cache');
}

/**
 * Alter mapping targets for entities. In this case alter target for jQuery
 * colorpicker fields on slide nodes.
 *
 * @param &$targets
 *   Array containing the targets to be offered to the user. Add to this array
 *   to expose additional options. Remove from this array to suppress options.
 *   Remove with caution.
 * @param $entity_type
 *   The entity type of the target, for instance a 'node' entity.
 * @param $bundle_name
 *   The bundle name for which to alter targets.
 */
function ik_mrss_feed_importer_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  if ($entity_type == 'node' && $bundle_name == 'slide') {
    $targets['field_ik_slide_color_theme'] = array(
      'name' => t('Color theme'),
      'description' => t('Choose color theme for slide.'),
      'callback' => 'ik_mrss_feed_importer_color_set_target',
    );

    // Change OG node field tagets
    $targets['field_ik_og_department_ref']['callback'] = 'ik_mrss_feed_importer_og_set_target';

    // Change taget for feed ref.
    $targets['field_ik_slide_import_node']['callback'] = 'ik_mrss_feed_importer_og_set_target';
  }
}

/**
 * Save OG values for feeds taget mapping as they conflict with feeds own ref
 * fields.
 *
 * @param $source
 *   Field mapper source settings.
 * @param $entity
 *   An entity object, for instance a node object.
 * @param $target
 *   A string identifying the target on the node.
 * @param $value
 *   The value to populate the target with.
 * @param $mapping
 *  Associative array of the mapping settings from the per mapping
 *  configuration form.
 */
function ik_mrss_feed_importer_color_set_target($source, $entity, $target, $value, $mapping) {
  $entity->{$target}[$entity->language][0]['value'] = $value;
}

/**
 * Save jQuery color picker value for feeds taget mapping.
 *
 * @param $source
 *   Field mapper source settings.
 * @param $entity
 *   An entity object, for instance a node object.
 * @param $target
 *   A string identifying the target on the node.
 * @param $value
 *   The value to populate the target with.
 * @param $mapping
 *  Associative array of the mapping settings from the per mapping
 *  configuration form.
 */
function ik_mrss_feed_importer_og_set_target($source, $entity, $target, $value, $mapping) {
  $entity->language = isset($entity->language) ? $entity->language : 'und';
  $entity->{$target}[$entity->language][0]['target_id'] = $value;
}

/**
 * Implements hook_feed_presave().
 *
 * Ensure that all imported slides have an image attached.
 */
function ik_mrss_feed_importer_feeds_presave(FeedsSource $source, $entity, $item) {
  if ($entity->feeds_item->id == 'mrss_feed_importer' && empty($item['media_url']) && !$item['text_only']) {
    // Skip saving this entity.
    $entity->feeds_item->skip = TRUE;
  }
}